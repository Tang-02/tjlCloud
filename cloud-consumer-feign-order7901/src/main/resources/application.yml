server:
  port: 7901
spring:
  application:
    name: cloud-consumer-openfeign-order
  ####Spring Cloud Consul for Service Discovery
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true #优先使用服务ip进行注册
        service-name: ${spring.application.name}
    openfeign:
      client:
        config:
         default:
          connectTimeout: 20000 #连接超时时间
          readTimeout: 20000 #读取超时时间
#         cloud-payment-service: #指定某服务的超时控制 会覆盖默认配置
#          connectTimeout: 5000 #连接超时时间
#          readTimeout: 9000 #读取超时时间
      httpclient:
        hc5:
          enabled: true
      compression:
        request:
          enabled: true #开启请求压缩
          mime-types: text/xml,application/xml,application/json  #指定压缩的数据格式
          min-request-size: 2048 #指定压缩的数据大小
        response:
          enabled: true #开启响应压缩
     #开启circuitbreaker和分组激活 spring.cloud.openfeign.circuitbreaker.enabled
      circuitbreaker:
        enabled: true
        group:
          enabled: false  #没开分组永远不用分组的配置。精确优先、分组次之(开了分组)、默认最后

#打印请求日志
#logging:
#  level:
#    com:
#      tjl:
#        cloud:
#          apis:
#            PayFeignApi: debug

# Resilience4j CircuitBreaker 按照次数：COUNT_BASED 的例子
#  6次访问中当执行方法的失败率达到50%时CircuitBreaker将进入开启OPEN状态(保险丝跳闸断电)拒绝所有请求。
#  等待5秒后，CircuitBreaker 将自动从开启OPEN状态过渡到半开HALF_OPEN状态，允许一些请求通过以测试服务是否恢复正常。
#  如还是异常CircuitBreaker 将重新进入开启OPEN状态；如正常将进入关闭CLOSE闭合状态恢复正常处理请求。
#resilience4j:
#  circuitbreaker:
#    configs:
#      default:
#        failureRateThreshold: 50 #设置50%的调用失败时打开断路器，超过失败请求百分⽐CircuitBreaker变为OPEN状态。
#        slidingWindowType: COUNT_BASED # 滑动窗口的类型
#        slidingWindowSize: 6 #滑动窗⼝的⼤⼩配置COUNT_BASED表示6个请求，配置TIME_BASED表示6秒
#        minimumNumberOfCalls: 6 #断路器计算失败率或慢调用率之前所需的最小样本(每个滑动窗口周期)。如果minimumNumberOfCalls为10，则必须最少记录10个样本，然后才能计算失败率。如果只记录了9次调用，即使所有9次调用都失败，断路器也不会开启。
#        automaticTransitionFromOpenToHalfOpenEnabled: true # 是否启用自动从开启状态过渡到半开状态，默认值为true。如果启用，CircuitBreaker将自动从开启状态过渡到半开状态，并允许一些请求通过以测试服务是否恢复正常
#        waitDurationInOpenState: 5s #从OPEN到HALF_OPEN状态需要等待的时间
#        permittedNumberOfCallsInHalfOpenState: 2 #半开状态允许的最大请求数，默认值为10。在半开状态下，CircuitBreaker将允许最多permittedNumberOfCallsInHalfOpenState个请求通过，如果其中有任何一个请求失败，CircuitBreaker将重新进入开启状态。
#        recordExceptions:  # 记录的异常
#          - java.lang.Exception
#        ignoreExceptions:  # 要忽略的自异常 例如 请求参数错误等自定义的常规业务异常不触发熔断
#          - com.tjl.cloud.exp.RequestEx
#    instances:  #指定哪个服务使用该配置
#      cloud-payment-service:
#        baseConfig: default

####resilience4j bulkhead 的例子
resilience4j:
  bulkhead:
    configs:
      default:
        maxConcurrentCalls: 2 # 隔离允许并发线程执行的最大数量
        maxWaitDuration: 1s # 当达到并发调用数量时，新的线程的阻塞时间，我只愿意等待1秒，过时不候进舱壁兜底fallback
    instances:
      cloud-payment-service:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeout-duration: 20s
  thread-pool-bulkhead:
    configs:
      default:
        core-thread-pool-size: 1  # 核心线程数量  最大并发数=最大线程数量+等待队列数量
        max-thread-pool-size: 1   # 最大线程数量
        queue-capacity: 1 #等待队列数量
    instances:
      cloud-payment-service:
        baseConfig: default


